const { sign, verify } = require("jsonwebtoken");

exports.signToken = function (payload, expiresIn = process.env.JWT_EXPIRE) {
  return sign(payload, process.env.JWT_SECRET, {
    expiresIn,
  });
};

exports.auth = (req, res, next) => {
  let token = req.headers.authorization || "";
  if (token.startsWith("Bearer ")) {
    token = token.substring(7);
  }

  if (token) {
    verify(token, process.env.JWT_SECRET, function (err, decoded) {
      if (!err) {
        req.decoded = decoded;
        next();
      } else {
        console.log("error aca");
        next({
          statusCode: 401,
          message: "Unauthorized",
        });
      }
    });
  } else {
    next({
      statusCode: 401,
      message: "Unauthorized",
    });
  }
};

exports.owner = (req, res, next) => {
  const { doc = {}, decoded = {} } = req;
  console.log(doc?.author?.id === decoded.id);
  if (doc.author.id === decoded.id) {
    next();
  } else {
    next({
      statusCode: 403,
      message: "Forbiddennn",
    });
  }
};
